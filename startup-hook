#!/bin/bash
# 
# xmonad "startup hook" script. This gets run after xmonad is initialized,
# via the startupHook facility provided by xmonad. It's useful for 
# running any programs which you want to use within xmonad but
# which don't need to be initialized before xmonad is running. 
#
# Author: David Brewer
# Repository: https://github.com/davidbrewer/xmonad-ubuntu-conf

#
# TRAY ICON SOFTWARE
#

# Network manager, so we don't have to configure wifi at the command line.
# if [ -z "$(pgrep nm-applet)" ] ; then
#     nm-applet --sm-disable &
# fi

# Applet for managing print jobs from the tray.
if [ -z "$(pgrep system-config-printer-applet)" ] ; then
    system-config-printer-applet &
fi

if [ -z "$(pgrep yeahconsole)" ] ; then
  yeahconsole &

  # wait a little until all the windows are created
  sleep 1

  # get yeahconsole window id
  id=$(xwininfo -root -tree | grep yeahconsole -B 2 | head -1 | perl -p -e 's/^ *(0x.*?) .*$/$1/g')

  # make transparent!
  # value is between 0 (invisible) and 2^32 (fully opaque)
  xprop -id "$id" -f _NET_WM_WINDOW_OPACITY 32c -set _NET_WM_WINDOW_OPACITY 3221225472
fi

# dunst is a minimal notification manager
# if [ -z "$(grep dunst)" ] ; then
#   dunst &
# fi

if [ -z "$(grep xfce4-notifyd)" ] ; then
  /usr/lib/x86_64-linux-gnu/xfce4/notifyd/xfce4-notifyd &
fi

# set resolution to sane one
$HOME/.xmonad/res.sh 1680

# transparency with xcompmgr
xcompmgr -c &

# start flux
$HOME/.xmonad/start-flux

#
# APPLICATION LAUNCHER
#


# On login, we unlock the ssh keychain so we're not prompted for 
# passphrases later. We pipe /dev/null to ssh-add to make it realize 
# it's not running in a terminal. Otherwise, it won't launch the prompt.
# 
# If you don't use the ssh keychain you may not want this. Commented
# by default as it is assumed many users will not want this feature.

# export SSH_ASKPASS="/usr/bin/ssh-askpass"
# cat /dev/null | ssh-add &

# I disable the middle mouse button because otherwise I constantly 
# accidentally paste unwanted text in the middle of my code while scrolling. 
# Note that the id of the mouse device may be different depending on 
# which usb port it is plugged into! To find it, use:
# xinput list |grep 'id='
# In the following command, the id is the first argument, the rest is 
# the remapping.

# Commented by default as it is assumed many users will not want this.
# xinput set-button-map 10 1 0 3 4 5 6 7

